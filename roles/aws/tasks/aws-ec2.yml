      - name: Create KeyPair
        ec2_key:
          name: "{{  ec2_key }}"
          region: "{{ region }}"
        register: ssh_key

      - name: Save private key
        copy: 
          content: "{{ ssh_key.key.private_key }}" 
          dest: "{{ PROJECT_ROOT }}/aws-private.pem" 
          mode: 0600
        when: ssh_key.changed

      - name: Get Ansible server's IP address to whitelistes in SG
        uri:
          url: http://checkip.amazonaws.com/
          return_content: yes
        register: ansible_master_ip   

      - name: Create Security Group
        ec2_group:
          name: "{{ sec_group }}"
          description: "{{ sec_group_desc }}"
          vpc_id: "{{ vpc_id }}"
          region: "{{ region }}"
          rules:
            - proto: tcp
              ports:
                - 80
              cidr_ip: 0.0.0.0/0
              rule_desc: allow all on port 8080
            - proto: tcp
              ports: 
                   - 22
              cidr_ip: "{{ ansible_master_ip.content | replace('\n', '') }}/32"  
              rule_desc: allow ssh connection from ansible master to perform tasks
        register: sec_grp
      
      - name: Create an EC2 instance
        ec2:
          key_name: "{{ ec2_key }}"
          instance_type: "{{ instance_type }}"
          instance_tags:
            Name: "{{ Tag_Name }}"
          image: "{{ ec2_ami }}"
          wait: yes
          group: "{{ sec_group }}"
          user_data: "{{ lookup('file', 'user_data.sh') }}"
         # count: 2
          count_tag:
            Name: "{{ Tag_Name }}"
          exact_count: 2
          vpc_subnet_id: "{{ subnet_id }}"
          assign_public_ip: yes
          region: "{{ region }}"
        register: ec2

      - name: Add hosts to inventory
        add_host:
             hostname: "{{ item.public_ip }}"
             groupname: tag_Name_Webserver
        with_items:
                "{{ ec2.tagged_instances }}"



#      - name: Fetch RDS security group
#        rds_instance_facts:
#          db_instance_identifier: "{{ RDS_Instance_Name }}"
#          region: "{{ region }}"
#        register: rds_facts
#
#
#      - debug:
#              msg: "{{ rds_facts }}"
#
#
#      - name: Allow mysql connection from instances to RDS
#        ec2_group:
#           name: "{{ rds_facts.instances[0].vpc_security_groups[0].vpc_security_group_id }}"
#           state: present
#           description: Modifying the security group used by DB to allow mysql connections from EC2 instances
#           vpc_id: "{{ vpc_id }}"
#           region: "{{ region }}"
#           rules:
#              - protocol: tcp
#                ports:
#                   - 3306
#                group_id:
#                   - "{{ sec_grp.group_id }}"
          
     








#      - debug:
#          msg: "{{ ec2 }}"

#      - name: Add the newly created EC2 instance(s) to host group
#        lineinfile:
#                    path: "{{ hostpath }}"
#                    regexp: "{{ item.public_ip }}"
#                    insertafter: "[webservers]"
#                    line: "{{ item.public_ip }} {{ hoststring }}"
#                    state: present
#
#        with_items: "{{ ec2.tagged_instances }}"

